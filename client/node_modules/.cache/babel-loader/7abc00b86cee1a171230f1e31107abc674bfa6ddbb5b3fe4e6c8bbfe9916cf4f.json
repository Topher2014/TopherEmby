{"ast":null,"code":"var _jsxFileName = \"/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/Groups.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Requests from './Requests';\nimport GroupUsers from './GroupUsers';\nimport { Button, List, Container, Box, Typography, MenuItem, TextField } from '@mui/material';\nimport { styled } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Groups(_ref) {\n  _s();\n  let {\n    groups,\n    fetchGroups,\n    user\n  } = _ref;\n  useEffect(() => {\n    fetchGroups();\n  }, []);\n  const [groupID, setGroupID] = useState(null);\n  const [showUsers, setShowUsers] = useState(null);\n  const [initial, setInitial] = useState(true);\n  const [label, setLabel] = useState('Select a group...');\n  const history = useHistory();\n  function handleClick() {\n    fetchGroups();\n    setShowUsers(toggle => !toggle);\n  }\n  const users = groups.map(mappedGroups => mappedGroups.groupuser).flat().filter(filteredGroups => filteredGroups.group_id === groupID).map(group => group.users);\n  const buttonText = showUsers ? /*#__PURE__*/_jsxDEV(Button, {\n    onClick: handleClick,\n    children: \" Show Requests \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 36\n  }, this) : /*#__PURE__*/_jsxDEV(Button, {\n    onClick: handleClick,\n    children: \" Show Users \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 94\n  }, this);\n  const initalButtonText = !initial ? buttonText : null;\n  const renderInfo = showUsers ? /*#__PURE__*/_jsxDEV(GroupUsers, {\n    users: users,\n    user: user\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 36\n  }, this) : /*#__PURE__*/_jsxDEV(Requests, {\n    groupID: groupID\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 79\n  }, this);\n  const initialRenderInfo = !initial ? renderInfo : null;\n  const renderGroups = groups.map(mappedGroups => mappedGroups.groupuser).flat().filter(filteredGroups => filteredGroups.user_id === user.id).map(group => {\n    return /*#__PURE__*/_jsxDEV(MenuItem, {\n      onClick: () => {\n        setGroupID(group.groups.id);\n        setInitial(false);\n        setLabel(group.groups.name);\n      },\n      children: [\" \", group.groups.name, \"  \"]\n    }, group.groups.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Groups\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => history.push('/editgroups'),\n      children: \" Edit Groups \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: label,\n      select: true,\n      name: \"group_id\",\n      children: renderGroups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), initalButtonText, initialRenderInfo]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(Groups, \"Bh9I77rYWvMekRbZF+8BcMnnVig=\", false, function () {\n  return [useHistory];\n});\n_c = Groups;\nexport default Groups;\nvar _c;\n$RefreshReg$(_c, \"Groups\");","map":{"version":3,"names":["useEffect","useState","useHistory","Requests","GroupUsers","Button","List","Container","Box","Typography","MenuItem","TextField","styled","jsxDEV","_jsxDEV","Groups","_ref","_s","groups","fetchGroups","user","groupID","setGroupID","showUsers","setShowUsers","initial","setInitial","label","setLabel","history","handleClick","toggle","users","map","mappedGroups","groupuser","flat","filter","filteredGroups","group_id","group","buttonText","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","initalButtonText","renderInfo","initialRenderInfo","renderGroups","user_id","id","name","push","select","_c","$RefreshReg$"],"sources":["/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/Groups.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport {useHistory } from 'react-router-dom'\nimport Requests from './Requests'\nimport GroupUsers from './GroupUsers'\nimport {Button, List, Container, Box, Typography, MenuItem, TextField} from '@mui/material';\nimport { styled } from '@mui/system';\n\nfunction Groups({groups, fetchGroups, user}){\n    useEffect(() => {fetchGroups()}, [])\n    const [groupID, setGroupID] = useState(null)\n    const [showUsers, setShowUsers] = useState(null)\n    const [initial, setInitial] = useState(true)\n    const [label, setLabel] = useState('Select a group...')\n    const history = useHistory()\n    function handleClick() {\n        fetchGroups()\n        setShowUsers((toggle) => !toggle)\n    }\n    const users = groups.map(mappedGroups => mappedGroups.groupuser).flat().filter(filteredGroups => filteredGroups.group_id === groupID).map(group => group.users)\n    const buttonText = showUsers ? <Button onClick={handleClick} > Show Requests </Button> : <Button onClick={handleClick} > Show Users </Button>\n    const initalButtonText = !initial ? buttonText : null\n    const renderInfo = showUsers ? <GroupUsers users={users} user={user} /> : <Requests groupID={groupID} /> \n    const initialRenderInfo = !initial ? renderInfo : null\n\n    const renderGroups = groups.map(mappedGroups => mappedGroups.groupuser).flat().filter(filteredGroups => filteredGroups.user_id === user.id).map(group => {\n        return (\n            <MenuItem   key={group.groups.id} onClick={() => {setGroupID(group.groups.id); setInitial(false); setLabel(group.groups.name)}} > {group.groups.name}  </MenuItem>\n        )\n    })\n\n    return (\n        <Container >\n            <Typography >Groups</Typography>\n            <Button onClick={() => history.push('/editgroups')}> Edit Groups </Button>\n            <TextField label={label} select name='group_id' >\n              {renderGroups}\n            </TextField>\n            {initalButtonText}\n            {initialRenderInfo}\n        </Container>\n    )\n}\n\nexport default Groups"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}