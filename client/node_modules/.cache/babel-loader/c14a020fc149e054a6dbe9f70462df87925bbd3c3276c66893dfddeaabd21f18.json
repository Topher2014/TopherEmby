{"ast":null,"code":"var _jsxFileName = \"/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/EditGroups.js\",\n  _s = $RefreshSig$();\nimport { useHistory, Link, Route } from 'react-router-dom';\nimport { useState, useEffect, React } from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditGroups(_ref) {\n  _s();\n  let {\n    groups,\n    fetchGroups,\n    setGroups\n  } = _ref;\n  useEffect(() => {\n    fetchGroups();\n  }, []);\n  const [test, setTest] = useState();\n  const history = useHistory();\n  const [newGroup, setNewGroup] = useState([]);\n  const addGroup = group => setNewGroup(current => [...current, group]);\n  const formSchema = yup.object().shape({\n    name: yup.string().required('Group name')\n  });\n  function handleDelete(id) {\n    const newGroups = groups.filter(group => {\n      return group.id !== id;\n    });\n    console.log(id);\n    fetch(`/group/${id}`, {\n      method: 'DELETE'\n    }).then(() => setGroups(newGroups));\n  }\n  const formik = useFormik({\n    initialValues: {\n      name: ' '\n    },\n    validationSchema: formSchema,\n    onSubmit: values => {\n      fetch('/groups', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ...values\n        })\n      }).then(response => {\n        if (response.ok) {\n          response.json().then(group => {\n            addGroup(group);\n            history.push('/groups');\n            window.location.reload();\n            setTest(values);\n          });\n        }\n      });\n    }\n  });\n  const renderGroups = groups.map(group => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"groupcard\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", group.name, \" \"]\n        }, group.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"button-30\",\n          onClick: () => handleDelete(group.id),\n          children: \" Delete \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)\n    }, group.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Edit Groups \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"groupform\",\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        name: \"text\",\n        value: formik.values.text,\n        onChange: formik.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"button-30\",\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"groupscontainer\",\n      children: [\" \", renderGroups, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(EditGroups, \"L0ldiK3x81N3Y6MVu2uxL1748wo=\", false, function () {\n  return [useHistory, useFormik];\n});\n_c = EditGroups;\nexport default EditGroups;\nvar _c;\n$RefreshReg$(_c, \"EditGroups\");","map":{"version":3,"names":["useHistory","Link","Route","useState","useEffect","React","useFormik","yup","jsxDEV","_jsxDEV","EditGroups","_ref","_s","groups","fetchGroups","setGroups","test","setTest","history","newGroup","setNewGroup","addGroup","group","current","formSchema","object","shape","name","string","required","handleDelete","id","newGroups","filter","console","log","fetch","method","then","formik","initialValues","validationSchema","onSubmit","values","headers","body","JSON","stringify","response","ok","json","push","window","location","reload","renderGroups","map","children","className","fileName","_jsxFileName","lineNumber","columnNumber","class","onClick","handleSubmit","type","value","text","onChange","handleChange","_c","$RefreshReg$"],"sources":["/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/EditGroups.js"],"sourcesContent":["import { useHistory, Link, Route } from 'react-router-dom'\nimport { useState, useEffect, React } from 'react'\nimport { useFormik } from 'formik'\nimport * as yup from 'yup'\n\nfunction EditGroups({groups, fetchGroups, setGroups}) {\n    useEffect(() => {fetchGroups()}, [])\n    const [test , setTest] = useState()\n    const history = useHistory()\n    const [newGroup, setNewGroup] = useState([])\n    const addGroup = (group) => setNewGroup(current => [...current, group])\n        const formSchema = yup.object().shape({\n            name: yup.string().required('Group name')\n        })\n\n    function handleDelete(id) {\n        const newGroups = groups.filter(group => {\n            return group.id !== id\n        })\n        console.log(id)\n        fetch(`/group/${id}`, {\n            method: 'DELETE'\n        }).then(() => setGroups(newGroups))\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            name: ' '\n        },\n        validationSchema: formSchema,\n        onSubmit: (values) => {\n            fetch('/groups', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({...values}),\n            }).then((response) => {\n                if(response.ok) {\n                    response.json().then(group => {\n                        addGroup(group)\n                        history.push('/groups')\n                        window.location.reload()\n                    setTest(values)\n                    })\n                }\n            })\n        }\n    })\n\n    const renderGroups = groups.map((group) => {\n        return (\n            <div key={group.id} >\n            <ul className='groupcard' >\n                <li key={group.id}> {group.name} </li>\n                <button class='button-30' onClick={() => handleDelete(group.id)}> Delete </button>\n            </ul>\n            </div>\n            )\n    })\n    return (\n        <div>\n            <h1> Edit Groups </h1>\n            <form className='groupform' onSubmit={formik.handleSubmit}>\n                <label> Name: </label>\n                <textarea\n                type='text'\n                name='text'\n                value={formik.values.text}\n                onChange={formik.handleChange}\n                />\n                <input class='button-30' type='submit' />\n            </form>\n            <div className='groupscontainer'> {renderGroups} </div>\n        </div>\n    )\n}\n\nexport default EditGroups"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}