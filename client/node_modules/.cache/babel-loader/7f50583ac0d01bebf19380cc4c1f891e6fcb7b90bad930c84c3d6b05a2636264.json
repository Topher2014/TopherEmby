{"ast":null,"code":"var _jsxFileName = \"/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/Friends.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Friends(_ref) {\n  _s();\n  let {\n    user,\n    users,\n    fetchUsers\n  } = _ref;\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const [filteredUsers, setFilteredUsers] = useState([]);\n  setFilteredUsers(users);\n  function handleAddFriendClick(friend_id) {\n    fetch('/friendships', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user_id: parseInt(user.id),\n        friend_id: parseInt(friend_id)\n      })\n    }).then(res => {\n      if (res.ok) {\n        // isFriend = true\n        window.location.reload(true);\n      } else console.log('error adding friend');\n    });\n  }\n  function handleDeleteFriendClick(friend_id) {\n    fetch('/friendships', {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user_id: parseInt(user.id),\n        friend_id: parseInt(friend_id)\n      })\n    }).catch(err => console.log(err));\n    window.location.reload(true);\n    setFilteredUsers(users);\n  }\n\n  // const handleChange = (event) => {\n  //     const search = event.target.value.toLowerCase()\n  //     setFilteredUsers(users.filter(user => {\n  //         const usernameBool = user.name.toLowerCase().includes(search)\n  //         // const emailBool = user.email.toLowerCase().includes(search)\n  //         // return usernameBool || emailBool\n  //         return usernameBool \n  //     }))\n  // }\n\n  const currentUserID = user.id;\n  const friendIDs = user.friends.map(friend => friend.id);\n  // const renderUsers = users.map(user => {\n  return filteredUsers.map(user => {\n    const isFriend = friendIDs.includes(user.id);\n    if (user.id === currentUserID) {\n      return '';\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [user.name, isFriend ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDeleteFriendClick(user.id),\n        children: \" Delete Friend \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAddFriendClick(user.id),\n        children: \" Add Friend \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 109\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this);\n  });\n\n  // return (\n  //     <div>\n  //         <input onChange={(event) => handleChange(event)}/>  \n  //         <h1> Users </h1>\n  //         {renderUsers}\n  //     </div>\n  // )\n\n  // const renderUsers = filteredUsers.map(user => {\n  //     const isFriend = friendIDs.includes(user.id)\n  //     if (user.id === currentUserID){\n  //         return ''\n  //     }\n  //     return (\n  //     <div>\n  //         {user.name}\n  //         {isFriend ? <button onClick={() => handleDeleteFriendClick(user.id)}> Delete Friend </button> : <button onClick={() => handleAddFriendClick(user.id)}> Add Friend </button>}\n  //     </div>\n  //     )\n  // })\n\n  // return (\n  //     <div>\n  //         <input onChange={(event) => handleChange(event)}/>  \n  //         <h1> Users </h1>\n  //         {renderUsers}\n  //     </div>\n  // )\n}\n_s(Friends, \"As4nE75CS1ALvLmg3pHQGVWpLpI=\");\n_c = Friends;\nexport default Friends;\nvar _c;\n$RefreshReg$(_c, \"Friends\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Friends","_ref","_s","user","users","fetchUsers","filteredUsers","setFilteredUsers","handleAddFriendClick","friend_id","fetch","method","headers","body","JSON","stringify","user_id","parseInt","id","then","res","ok","window","location","reload","console","log","handleDeleteFriendClick","catch","err","currentUserID","friendIDs","friends","map","friend","isFriend","includes","children","name","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/Friends.js"],"sourcesContent":["import { useEffect, useState } from 'react'\n\nfunction Friends({user, users, fetchUsers}) {\n    useEffect(() => {fetchUsers()}, [])\n    const [filteredUsers, setFilteredUsers] = useState([])\n    setFilteredUsers(users)\n\n    function handleAddFriendClick(friend_id) {\n        fetch('/friendships', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                user_id: parseInt(user.id),\n                friend_id: parseInt(friend_id)\n            })\n        })\n        .then(res => {\n            if(res.ok) {\n                // isFriend = true\n                window.location.reload(true)\n            } else console.log('error adding friend')\n        })\n    }\n\n    function handleDeleteFriendClick(friend_id) {\n        fetch('/friendships', {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                user_id: parseInt(user.id),\n                friend_id: parseInt(friend_id)\n            })\n        })\n        .catch(err => console.log(err))\n        window.location.reload(true)\n        setFilteredUsers(users)\n    }\n\n    // const handleChange = (event) => {\n    //     const search = event.target.value.toLowerCase()\n    //     setFilteredUsers(users.filter(user => {\n    //         const usernameBool = user.name.toLowerCase().includes(search)\n    //         // const emailBool = user.email.toLowerCase().includes(search)\n    //         // return usernameBool || emailBool\n    //         return usernameBool \n    //     }))\n    // }\n\n    const currentUserID = user.id\n    const friendIDs = user.friends.map(friend => friend.id)\n    // const renderUsers = users.map(user => {\n    return (\n    filteredUsers.map(user => {\n        const isFriend = friendIDs.includes(user.id)\n        if (user.id === currentUserID){\n            return ''\n        }\n        return (\n        <div>\n            {user.name}\n            {isFriend ? <button onClick={() => handleDeleteFriendClick(user.id)}> Delete Friend </button> : <button onClick={() => handleAddFriendClick(user.id)}> Add Friend </button>}\n        </div>\n        )\n    })\n\n    )\n\n    // return (\n    //     <div>\n    //         <input onChange={(event) => handleChange(event)}/>  \n    //         <h1> Users </h1>\n    //         {renderUsers}\n    //     </div>\n    // )\n\n    // const renderUsers = filteredUsers.map(user => {\n    //     const isFriend = friendIDs.includes(user.id)\n    //     if (user.id === currentUserID){\n    //         return ''\n    //     }\n    //     return (\n    //     <div>\n    //         {user.name}\n    //         {isFriend ? <button onClick={() => handleDeleteFriendClick(user.id)}> Delete Friend </button> : <button onClick={() => handleAddFriendClick(user.id)}> Add Friend </button>}\n    //     </div>\n    //     )\n    // })\n\n    // return (\n    //     <div>\n    //         <input onChange={(event) => handleChange(event)}/>  \n    //         <h1> Users </h1>\n    //         {renderUsers}\n    //     </div>\n    // )\n}\n\nexport default Friends"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}