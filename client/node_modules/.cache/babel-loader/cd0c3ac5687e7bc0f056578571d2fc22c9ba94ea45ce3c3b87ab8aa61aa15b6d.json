{"ast":null,"code":"var _jsxFileName = \"/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/AddUsers.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddUsers(_ref) {\n  _s();\n  let {\n    users,\n    fetchUsers,\n    user,\n    groups,\n    fetchGroups\n  } = _ref;\n  const {\n    groupId\n  } = useParams();\n  // useEffect(() => {fetchUsers()}, [])\n  useEffect(() => {\n    fetchUsers();\n    fetchGroups();\n  }, []);\n  function handlePost(user_id, group_id) {\n    fetch(`/groupusers`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user_id: user_id,\n        group_id: group_id\n      })\n    });\n    return null;\n  }\n  // console.log(user)\n  // console.log(groups)\n  // const currentUsers = groups.map(group => console.log(group.groupuser))\n  // const groupOptions = groups.map(mappedGroups => mappedGroups.groupuser).flat().filter(filteredGroups => console.log(filteredGroups.group_id === groupId))\n  const groupOptions = groups.map(mappedGroups => mappedGroups.groupuser).flat();\n  // console.log(groupOptions)\n  console.log(groupId);\n  const id = groupId;\n  console.log(id);\n  const group = groupOptions.filter(group => group.group_id === id);\n  console.log(group);\n  // const renderUsers = users.map((user) => {\n  const renderUsers = user.friends.map(user => {\n    // console.log('user.id', user.id, 'currentUsers', currentUsers)\n    //  if (currentUsers.includes(user.id)){\n    //     return ''\n    //     }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"usercard\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", user.name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-30\",\n          onClick: () => handlePost(user.id, groupId),\n          children: \" Add \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, user.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Add Users \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\" \", renderUsers, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(AddUsers, \"EwkuCpd5uZ6EwYCydtqS5fWuURk=\", false, function () {\n  return [useParams];\n});\n_c = AddUsers;\nexport default AddUsers;\nvar _c;\n$RefreshReg$(_c, \"AddUsers\");","map":{"version":3,"names":["useEffect","useParams","jsxDEV","_jsxDEV","AddUsers","_ref","_s","users","fetchUsers","user","groups","fetchGroups","groupId","handlePost","user_id","group_id","fetch","method","headers","body","JSON","stringify","groupOptions","map","mappedGroups","groupuser","flat","console","log","id","group","filter","renderUsers","friends","children","className","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/AddUsers.js"],"sourcesContent":["import { useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\n\nfunction AddUsers({users, fetchUsers, user, groups, fetchGroups}) {\n    const {groupId} = useParams()\n    // useEffect(() => {fetchUsers()}, [])\n    useEffect(() => {fetchUsers(); fetchGroups()}, [])\n    function handlePost(user_id, group_id){\n        fetch(`/groupusers`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({user_id: user_id, group_id: group_id}),\n        })\n        return (\n            null\n        )\n    }\n    // console.log(user)\n    // console.log(groups)\n    // const currentUsers = groups.map(group => console.log(group.groupuser))\n    // const groupOptions = groups.map(mappedGroups => mappedGroups.groupuser).flat().filter(filteredGroups => console.log(filteredGroups.group_id === groupId))\n    const groupOptions = groups.map(mappedGroups => mappedGroups.groupuser).flat()\n    // console.log(groupOptions)\n    console.log(groupId)\n    const id = groupId\n    console.log(id)\n    const group = groupOptions.filter(group => group.group_id === id) \n    console.log(group)\n    // const renderUsers = users.map((user) => {\n    const renderUsers = user.friends.map((user) => {\n        // console.log('user.id', user.id, 'currentUsers', currentUsers)\n        //  if (currentUsers.includes(user.id)){\n        //     return ''\n        //     }\n        return (\n            <div key={user.id} >\n            <ul className='usercard' >\n                <li > {user.name} </li>\n                <button className='button-30' onClick={() => handlePost(user.id, groupId)} > Add </button>\n            </ul>\n            </div>\n        )\n    })\n    return (\n        <div>\n            <h1> Add Users </h1>\n            <h4> {renderUsers} </h4>\n        </div>\n    )\n}\n\nexport default AddUsers"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}