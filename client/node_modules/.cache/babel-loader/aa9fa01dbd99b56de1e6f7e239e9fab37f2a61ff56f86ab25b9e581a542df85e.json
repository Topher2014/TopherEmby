{"ast":null,"code":"var _jsxFileName = \"/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/Friends.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Friends(_ref) {\n  _s();\n  let {\n    user,\n    users,\n    fetchUsers\n  } = _ref;\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const [friendIDs, setFriendIDs] = useState([]);\n\n  // {id} = useParams()\n\n  const thisUser = user ? user.id === parseInt(user.id) : false;\n  console.log(user);\n  if (user) {\n    const FriendIDs = user.friends.map(friend => friend.id);\n  }\n  console.log(FriendIDs);\n  let isFriend = false;\n  if (user) {\n    // const friendIDs = users.map(user => user.friends).map(friend => console.log(friend))\n    // const friendIDs = users.map(user => user.map(friends => console.log(friends)))\n  }\n  // if (user) {\n  //     const friendIDs = user.friends.map(friend => friend.id)\n  //     isFriend = thisUser ? false : friendIDs.includes(parseInt(user.id))\n  //     // isFriend = thisUser ? false : friendIDs.includes(parseInt(id))\n  // }\n\n  function handleAddFriendClick() {\n    fetch('/friendships', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        // user_id: parseInt(id),\n        user_id: parseInt(user.id),\n        friend_id: parseInt(user.id)\n      })\n    }).then(res => {\n      if (res.ok) {\n        isFriend = true;\n        window.location.reload(true);\n      } else console.log('error adding friend');\n    });\n  }\n  function handleDeleteFriendClick() {\n    fetch('/friendships', {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user_id: parseInt(user.id),\n        friend_id: parseInt(user.id)\n        // friend_id: parseInt(id)\n      })\n    }).catch(err => console.log(err));\n    window.location.reload(true);\n  }\n  const renderUsers = users.map(user => {\n    // console.log(user)\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [user.name, isFriend ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteFriendClick,\n        children: \" Delete Friend \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddFriendClick,\n        children: \" Add Friend \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 94\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this);\n  });\n  // console.log(user)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Friends \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), renderUsers]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_s(Friends, \"PXevmVmNTtZkGI7b8JkSqO9kKro=\");\n_c = Friends;\nexport default Friends;\nvar _c;\n$RefreshReg$(_c, \"Friends\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Friends","_ref","_s","user","users","fetchUsers","friendIDs","setFriendIDs","thisUser","id","parseInt","console","log","FriendIDs","friends","map","friend","isFriend","handleAddFriendClick","fetch","method","headers","body","JSON","stringify","user_id","friend_id","then","res","ok","window","location","reload","handleDeleteFriendClick","catch","err","renderUsers","children","name","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/Friends.js"],"sourcesContent":["import { useEffect, useState } from 'react'\n\nfunction Friends({user, users, fetchUsers}) {\n    useEffect(() => {fetchUsers()}, [])\n    const [friendIDs, setFriendIDs] = useState([])\n\n    // {id} = useParams()\n\n    const thisUser = user ? user.id === parseInt(user.id) : false\n    console.log(user)\n    if (user) {\n    const FriendIDs = user.friends.map(friend => friend.id)\n    }\n    console.log(FriendIDs)\n\n    let isFriend = false\n    if (user) {\n        // const friendIDs = users.map(user => user.friends).map(friend => console.log(friend))\n        // const friendIDs = users.map(user => user.map(friends => console.log(friends)))\n    }\n    // if (user) {\n    //     const friendIDs = user.friends.map(friend => friend.id)\n    //     isFriend = thisUser ? false : friendIDs.includes(parseInt(user.id))\n    //     // isFriend = thisUser ? false : friendIDs.includes(parseInt(id))\n    // }\n\n    function handleAddFriendClick() {\n        fetch('/friendships', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                // user_id: parseInt(id),\n                user_id: parseInt(user.id),\n                friend_id: parseInt(user.id)\n            })\n        })\n        .then(res => {\n            if(res.ok) {\n                isFriend = true\n                window.location.reload(true)\n            } else console.log('error adding friend')\n        })\n    }\n\n    function handleDeleteFriendClick() {\n        fetch('/friendships', {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                user_id: parseInt(user.id),\n                friend_id: parseInt(user.id)\n                // friend_id: parseInt(id)\n            })\n        })\n        .catch(err => console.log(err))\n        window.location.reload(true)\n    }\n    const renderUsers = users.map(user => {\n        // console.log(user)\n        return (\n        <div>\n            {user.name}\n            {isFriend ? <button onClick={handleDeleteFriendClick}> Delete Friend </button> : <button onClick={handleAddFriendClick}> Add Friend </button>}\n        </div>\n        )\n    })\n    // console.log(user)\n    return (\n        <div>\n            <h1> Friends </h1>\n            {renderUsers}\n        </div>\n    )\n}\n\nexport default Friends"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}