{"ast":null,"code":"var _jsxFileName = \"/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/AddRequest.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddRequest(_ref) {\n  _s();\n  let {\n    groups,\n    fetchGroups\n  } = _ref;\n  useEffect(() => {\n    fetchGroups();\n  }, []);\n  const formSchema = yup.object().shape({\n    name: yup.string().required('Enter name, dummy!'),\n    type: yup.string().required('Enter type, dummy!'),\n    quality: yup.string().required('Enter quality, dummy!')\n  });\n  console.log('groups:', groups);\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      type: '',\n      quality: '',\n      group_id: ''\n    },\n    validationSchema: formSchema,\n    validateOnChange: false,\n    // validateOnBlur: false\n    onSubmit: values => {\n      console.log('values:', values);\n      fetch('/addrequest', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ...values\n        })\n      }).then(response => {\n        if (response.ok) {\n          response.json().then(request => {\n            console.log(request);\n          });\n        }\n      });\n    }\n  });\n  const groupOptions = groups.map(group => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: group.id,\n      children: [\" \", group.id, \" \"]\n    }, group.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  });\n  console.log('groupOptions:', groupOptions);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Add Request \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: 'red'\n      },\n      children: [\" \", formik.errors.name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: 'red'\n      },\n      children: [\" \", formik.errors.type, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: 'red'\n      },\n      children: [\" \", formik.errors.quality, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"requestform\",\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        name: \"name\",\n        value: formik.values.text,\n        onChange: formik.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Type: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"type\",\n        value: formik.values.type,\n        onChange: formik.handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Movie\",\n          children: \" Movie \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Show\",\n          children: \" Show \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Quality: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"quality\",\n        value: formik.values.quality,\n        onChange: formik.handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"720p\",\n          children: \" 720p \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1080p\",\n          children: \" 1080p \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"4k\",\n          children: \" 4k \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Group: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"group_id\",\n        value: formik.values.group_id,\n        onChange: formik.handleChange,\n        children: groupOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"button-30\",\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(AddRequest, \"H765J74rD/hTDeNdvwLlHo+iEj4=\", false, function () {\n  return [useFormik];\n});\n_c = AddRequest;\nexport default AddRequest;\nvar _c;\n$RefreshReg$(_c, \"AddRequest\");","map":{"version":3,"names":["useEffect","useFormik","yup","jsxDEV","_jsxDEV","AddRequest","_ref","_s","groups","fetchGroups","formSchema","object","shape","name","string","required","type","quality","console","log","formik","initialValues","group_id","validationSchema","validateOnChange","onSubmit","values","fetch","method","headers","body","JSON","stringify","then","response","ok","json","request","groupOptions","map","group","value","id","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","errors","className","handleSubmit","text","onChange","handleChange","_c","$RefreshReg$"],"sources":["/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/AddRequest.js"],"sourcesContent":["import { useEffect } from 'react'\nimport { useFormik } from 'formik'\nimport * as yup from 'yup'\n\nfunction AddRequest({groups, fetchGroups}) {\n    useEffect(() => {fetchGroups()}, [])\n    const formSchema = yup.object().shape({\n            name: yup.string().required('Enter name, dummy!'),\n            type: yup.string().required('Enter type, dummy!'),\n            quality: yup.string().required('Enter quality, dummy!')\n        })\n    console.log('groups:', groups)\n    const formik = useFormik({\n        initialValues: {\n            name: '',\n            type: '',\n            quality: '',\n            group_id: ''\n        },\n        validationSchema: formSchema,\n        validateOnChange: false,\n        // validateOnBlur: false\n        onSubmit: (values) => {\n            console.log('values:', values)\n            fetch('/addrequest', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({...values}),\n            }).then((response) => {\n                if(response.ok) {\n                    response.json().then(request => {\n                        console.log(request)\n                    })\n                }\n            })\n        }\n    })\n    const groupOptions = groups.map(group => {\n        return (\n            <option value={group.id} key={group.id} > {group.id} </option>\n        )\n    })\n    console.log('groupOptions:', groupOptions)\n    return (\n        <div>\n            <h1> Add Request </h1>\n            <h2 style={{color:'red'}}> {formik.errors.name} </h2>\n            <h2 style={{color:'red'}}> {formik.errors.type} </h2>\n            <h2 style={{color:'red'}}> {formik.errors.quality} </h2>\n            <form className='requestform' onSubmit={formik.handleSubmit} >\n                <label> Name: </label>\n                <textarea type='text' name='name' value={formik.values.text} onChange={formik.handleChange} />\n                <label> Type: </label>\n                <select name='type' value={formik.values.type} onChange={formik.handleChange} >\n                    <option value='' >  </option>\n                    <option value='Movie' > Movie </option>\n                    <option value='Show' > Show </option>\n                </select>\n                <label> Quality: </label>\n                <select name='quality' value={formik.values.quality} onChange={formik.handleChange} >\n                    <option value='' >  </option>\n                    <option value='720p' > 720p </option>\n                    <option value='1080p' > 1080p </option>\n                    <option value='4k' > 4k </option>\n                </select>\n                <label> Group: </label>\n                <select name='group_id' value={formik.values.group_id} onChange={formik.handleChange}>\n                    {groupOptions}\n                </select>\n                <input className='button-30' type='submit' />\n            </form>\n        </div>\n    )\n}\n\nexport default AddRequest"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}