{"ast":null,"code":"var _jsxFileName = \"/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/EditGroups.js\",\n  _s = $RefreshSig$();\nimport { useHistory, Link, Route } from 'react-router-dom';\nimport { useState, useEffect, React } from 'react';\nimport { useFormik, Formik } from 'formik';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditGroups(_ref) {\n  _s();\n  let {\n    groups,\n    fetchGroups,\n    setGroups\n  } = _ref;\n  useEffect(() => {\n    fetchGroups();\n  }, []);\n  // const history = useHistory()\n  // const formSchema = yup.object().shape({\n  //         name: yup.string().required('Enter group name, dummy!')\n  //     })\n\n  function handleDelete(id) {\n    const newGroups = groups.filter(group => {\n      return group.id !== id;\n    });\n    console.log(id);\n    fetch(`/group/${id}`, {\n      method: 'DELETE'\n    }).then(() => setGroups(newGroups));\n  }\n\n  // const formik = useFormik({\n  //     initialValues: {\n  //         name: ''\n  //     },\n  //     validationSchema: formSchema,\n  //     validateOnChange: false,\n  //     // validateOnBlur: false,\n  //     onSubmit: (values, {resetForm}) => {\n  //         console.log(values)\n  //         resetForm({ values: ''})\n  //         fetch('/groups', {\n  //             method: 'POST',\n  //             headers: {\n  //                 'Content-Type': 'application/json',\n  //             },\n  //             body: JSON.stringify({...values}),\n  //         }).then((response) => {\n  //             if(response.ok) {\n  //                 response.json().then(() => {\n  //                     history.push('/editgroups')\n  //                     fetchGroups()\n  //                     // window.location.reload()\n  //     console.log(values)\n  //                 })\n  //             }\n  //         })\n  //     }\n  // })\n\n  const renderGroups = groups.map(group => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"groupcard\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", group.name, \" \"]\n        }, group.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-30\",\n          onClick: () => handleDelete(group.id),\n          children: \" Delete \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)\n    }, group.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      name: ''\n    }\n    // validationSchema: formSchema,\n    // validateOnChange: false,\n    ,\n    onSubmit: values => {\n      console.log(values);\n    },\n    children: formik => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Edit Groups \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"groupform\",\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          name: \"name\",\n          value: formik.values.text\n          // value=''\n          // onChange={formik.handleChange}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"button-30\",\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(EditGroups, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = EditGroups;\nexport default EditGroups;\nvar _c;\n$RefreshReg$(_c, \"EditGroups\");","map":{"version":3,"names":["useHistory","Link","Route","useState","useEffect","React","useFormik","Formik","yup","jsxDEV","_jsxDEV","EditGroups","_ref","_s","groups","fetchGroups","setGroups","handleDelete","id","newGroups","filter","group","console","log","fetch","method","then","renderGroups","map","children","className","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","initialValues","onSubmit","values","formik","handleSubmit","type","value","text","_c","$RefreshReg$"],"sources":["/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/EditGroups.js"],"sourcesContent":["\nimport { useHistory, Link, Route } from 'react-router-dom'\nimport { useState, useEffect, React } from 'react'\nimport { useFormik, Formik } from 'formik'\nimport * as yup from 'yup'\n\nfunction EditGroups({groups, fetchGroups, setGroups}) {\n    useEffect(() => {fetchGroups()}, [])\n    // const history = useHistory()\n    // const formSchema = yup.object().shape({\n    //         name: yup.string().required('Enter group name, dummy!')\n    //     })\n\n    function handleDelete(id) {\n        const newGroups = groups.filter(group => {\n            return group.id !== id\n        })\n        console.log(id)\n        fetch(`/group/${id}`, {\n            method: 'DELETE'\n        }).then(() => setGroups(newGroups))\n    }\n\n    // const formik = useFormik({\n    //     initialValues: {\n    //         name: ''\n    //     },\n    //     validationSchema: formSchema,\n    //     validateOnChange: false,\n    //     // validateOnBlur: false,\n    //     onSubmit: (values, {resetForm}) => {\n    //         console.log(values)\n    //         resetForm({ values: ''})\n    //         fetch('/groups', {\n    //             method: 'POST',\n    //             headers: {\n    //                 'Content-Type': 'application/json',\n    //             },\n    //             body: JSON.stringify({...values}),\n    //         }).then((response) => {\n    //             if(response.ok) {\n    //                 response.json().then(() => {\n    //                     history.push('/editgroups')\n    //                     fetchGroups()\n    //                     // window.location.reload()\n    //     console.log(values)\n    //                 })\n    //             }\n    //         })\n    //     }\n    // })\n\n\n    const renderGroups = groups.map((group) => {\n        return (\n            <div key={group.id} >\n            <ul className='groupcard' >\n                <li key={group.id}> {group.name} </li>\n                <button className='button-30' onClick={() => handleDelete(group.id)}> Delete </button>\n            </ul>\n            </div>\n            )\n    })\n    return (\n        <Formik\n           initialValues={{name: ''}} \n        // validationSchema: formSchema,\n        // validateOnChange: false,\n        onSubmit={(values) => {\n            console.log(values)\n        }}\n>\n        {\n            formik => (\n            <div>\n                <h1> Edit Groups </h1>\n                {/* <h2 style={{color:'red'}}> {formik.errors.name} </h2> */}\n                <form className='groupform' onSubmit={formik.handleSubmit}>\n                    <label> Name: </label>\n                    <textarea\n                    type='text'\n                    name='name'\n                    value={formik.values.text}\n                    // value=''\n                    // onChange={formik.handleChange}\n                    />\n                    <input className='button-30' type='submit' />\n                </form>\n                {/* <div className='groupscontainer'> {renderGroups} </div> */}\n            </div>\n\n            )\n        }\n        </Formik>\n    )\n}\n\nexport default EditGroups"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}