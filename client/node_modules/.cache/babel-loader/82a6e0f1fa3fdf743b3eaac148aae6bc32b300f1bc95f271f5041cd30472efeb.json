{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nfunction Groups() {\n  _s();\n  const [groups, setGroups] = useState([]);\n  useEffect(() => {\n    fetch('/groups').then(res => res.json()).then(data => setGroups(data));\n  }, []);\n  const renderGroups = groups.map(group => {\n    return group\n    // console.log(group)\n    ;\n  });\n\n  console.log(renderGroups);\n\n  // return (\n  // true\n  // <h1>Groups</h1>\n  // renderGroups\n  // )\n}\n_s(Groups, \"UbUkkKKaTwVY7PWotTfxor2xXvY=\");\n_c = Groups;\nexport default Groups;\nvar _c;\n$RefreshReg$(_c, \"Groups\");","map":{"version":3,"names":["useState","useEffect","Groups","_s","groups","setGroups","fetch","then","res","json","data","renderGroups","map","group","console","log","_c","$RefreshReg$"],"sources":["/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/Groups.js"],"sourcesContent":["import { useState, useEffect } from 'react'\n\nfunction Groups(){\n    const [groups, setGroups] = useState([])\n    \n    useEffect(() => {\n    fetch('/groups').then(res => res.json()).then(data => setGroups(data))\n    }, [])\n\n    const renderGroups = groups.map((group) => {\n        return (\n            group\n            // console.log(group)\n        )\n    })\n    console.log(renderGroups)\n\n    // return (\n        // true\n        // <h1>Groups</h1>\n        // renderGroups\n    // )\n}\n\nexport default Groups"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,SAASC,MAAMA,CAAA,EAAE;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IAChBK,KAAK,CAAC,SAAS,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CAACF,IAAI,CAACG,IAAI,IAAIL,SAAS,CAACK,IAAI,CAAC,CAAC;EACtE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAGP,MAAM,CAACQ,GAAG,CAAEC,KAAK,IAAK;IACvC,OACIA;IACA;IAAA;EAER,CAAC,CAAC;;EACFC,OAAO,CAACC,GAAG,CAACJ,YAAY,CAAC;;EAEzB;EACI;EACA;EACA;EACJ;AACJ;AAACR,EAAA,CApBQD,MAAM;AAAAc,EAAA,GAANd,MAAM;AAsBf,eAAeA,MAAM;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}