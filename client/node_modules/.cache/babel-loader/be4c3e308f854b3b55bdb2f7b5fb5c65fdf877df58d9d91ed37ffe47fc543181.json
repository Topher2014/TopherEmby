{"ast":null,"code":"var _jsxFileName = \"/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/EditGroups.js\",\n  _s = $RefreshSig$();\nimport { useHistory, Link, Route } from 'react-router-dom';\nimport { useState, useEffect, React } from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditGroups(_ref) {\n  _s();\n  let {\n    groups,\n    fetchGroups,\n    setGroups\n  } = _ref;\n  useEffect(() => {\n    fetchGroups();\n  }, []);\n  const history = useHistory();\n  const formSchema = yup.object().shape({\n    name: yup.string().required('Enter group name, dummy!')\n  });\n  function handleDelete(id) {\n    const newGroups = groups.filter(group => {\n      return group.id !== id;\n    });\n    console.log(id);\n    fetch(`/group/${id}`, {\n      method: 'DELETE'\n    }).then(() => setGroups(newGroups));\n  }\n  const formik = useFormik({\n    initialValues: {\n      name: ''\n    }\n    // validationSchema: formSchema,\n    // onSubmit: (values) => {\n    //     fetch('/groups', {\n    //         method: 'POST',\n    //         headers: {\n    //             'Content-Type': 'application/json',\n    //         },\n    //         body: JSON.stringify({...values}),\n    //     }).then((response) => {\n    //         if(response.ok) {\n    //             response.json().then(() => {\n    //                 // history.push('/editgroups')\n    //                 fetchGroups()\n    //                 // window.location.reload()\n    //             })\n    //         }\n    //     })\n    // }\n  });\n  // const [change, handleChange] = useState()\n  const [name, setName] = useState('');\n  const [formData, setFormData] = useState([]);\n  function handleChange(event) {\n    console.log(event);\n    // setName(event.target[0].value)\n  }\n\n  function handleSubmit(values) {\n    values.preventDefault();\n    const data = {\n      name: name\n    };\n    const array = [...formData, data];\n    setFormData(array);\n    console.log(values.target[0].value);\n    // fetch('/groups', {\n    //     method: 'POST',\n    //     headers: {\n    //         'Content-Type': 'application/json',\n    //     },\n    //     body: JSON.stringify({...values}),\n    // }).then((response) => {\n    //     if(response.ok) {\n    //         response.json().then(() => {\n    //             // history.push('/editgroups')\n    //             fetchGroups()\n    //             // window.location.reload()\n    //         })\n    //     }\n    // })\n  }\n\n  const renderGroups = groups.map(group => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"groupcard\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", group.name, \" \"]\n        }, group.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-30\",\n          onClick: () => handleDelete(group.id),\n          children: \" Delete \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)\n    }, group.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Edit Groups \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: 'red'\n      },\n      children: [\" \", formik.errors.name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"groupform\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        name: \"name\"\n        // value={formik.values.text}\n        // onChange={formik.handleChange}\n        ,\n        value: name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"button-30\",\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"groupscontainer\",\n      children: [\" \", renderGroups, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n_s(EditGroups, \"9PALZzPbEk962LThu9rnQXWfmO8=\", false, function () {\n  return [useHistory, useFormik];\n});\n_c = EditGroups;\nexport default EditGroups;\nvar _c;\n$RefreshReg$(_c, \"EditGroups\");","map":{"version":3,"names":["useHistory","Link","Route","useState","useEffect","React","useFormik","yup","jsxDEV","_jsxDEV","EditGroups","_ref","_s","groups","fetchGroups","setGroups","history","formSchema","object","shape","name","string","required","handleDelete","id","newGroups","filter","group","console","log","fetch","method","then","formik","initialValues","setName","formData","setFormData","handleChange","event","handleSubmit","values","preventDefault","data","array","target","value","renderGroups","map","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","color","errors","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/EditGroups.js"],"sourcesContent":["import { useHistory, Link, Route } from 'react-router-dom'\nimport { useState, useEffect, React } from 'react'\nimport { useFormik } from 'formik'\nimport * as yup from 'yup'\n\nfunction EditGroups({groups, fetchGroups, setGroups}) {\n    useEffect(() => {fetchGroups()}, [])\n    const history = useHistory()\n    const formSchema = yup.object().shape({\n            name: yup.string().required('Enter group name, dummy!')\n        })\n\n    function handleDelete(id) {\n        const newGroups = groups.filter(group => {\n            return group.id !== id\n        })\n        console.log(id)\n        fetch(`/group/${id}`, {\n            method: 'DELETE'\n        }).then(() => setGroups(newGroups))\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            name: ''\n        },\n        // validationSchema: formSchema,\n        // onSubmit: (values) => {\n        //     fetch('/groups', {\n        //         method: 'POST',\n        //         headers: {\n        //             'Content-Type': 'application/json',\n        //         },\n        //         body: JSON.stringify({...values}),\n        //     }).then((response) => {\n        //         if(response.ok) {\n        //             response.json().then(() => {\n        //                 // history.push('/editgroups')\n        //                 fetchGroups()\n        //                 // window.location.reload()\n        //             })\n        //         }\n        //     })\n        // }\n    })\n    // const [change, handleChange] = useState()\n    const [name, setName] = useState('')\n    const [formData, setFormData] = useState([])\n        function handleChange(event){\n            console.log(event)\n            // setName(event.target[0].value)\n        }\n        function handleSubmit(values){\n            values.preventDefault()\n            const data = {name: name}\n            const array = [...formData, data]\n            setFormData(array)\n            console.log(values.target[0].value)\n            // fetch('/groups', {\n            //     method: 'POST',\n            //     headers: {\n            //         'Content-Type': 'application/json',\n            //     },\n            //     body: JSON.stringify({...values}),\n            // }).then((response) => {\n            //     if(response.ok) {\n            //         response.json().then(() => {\n            //             // history.push('/editgroups')\n            //             fetchGroups()\n            //             // window.location.reload()\n            //         })\n            //     }\n            // })\n        }\n\n    const renderGroups = groups.map((group) => {\n        return (\n            <div key={group.id} >\n            <ul className='groupcard' >\n                <li key={group.id}> {group.name} </li>\n                <button className='button-30' onClick={() => handleDelete(group.id)}> Delete </button>\n            </ul>\n            </div>\n            )\n    })\n    return (\n        <div>\n            <h1> Edit Groups </h1>\n            <h2 style={{color:'red'}}> {formik.errors.name} </h2>\n            {/* <form className='groupform' onSubmit={formik.handleSubmit}> */}\n            <form className='groupform' onSubmit={handleSubmit}>\n                <label> Name: </label>\n                <textarea\n                type='text'\n                name='name'\n                // value={formik.values.text}\n                // onChange={formik.handleChange}\n                value={name}\n                onChange={handleChange}\n                />\n                <input className='button-30' type='submit' />\n            </form>\n            <div className='groupscontainer'> {renderGroups} </div>\n        </div>\n    )\n}\n\nexport default EditGroups"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}