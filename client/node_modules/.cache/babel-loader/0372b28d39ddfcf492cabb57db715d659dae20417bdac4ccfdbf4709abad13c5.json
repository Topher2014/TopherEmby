{"ast":null,"code":"var _jsxFileName = \"/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/Friends.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Friends(_ref) {\n  _s();\n  let {\n    user,\n    users,\n    fetchUsers\n  } = _ref;\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  // {id} = useParams()\n\n  const thisUser = user ? user.id === parseInt(user.id) : false;\n  let isFriend = false;\n  if (user) {\n    const friendIDs = user.friends.map(friend => friend.id);\n    isFriend = thisUser ? false : friendIDs.includes(parseInt(user.id));\n    // isFriend = thisUser ? false : friendIDs.includes(parseInt(id))\n  }\n\n  function handleAddFriendClick() {\n    fetch('/friendships', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        // user_id: parseInt(id),\n        user_id: parseInt(user.id),\n        friend_id: parseInt(user.id)\n      })\n    }).then(res => {\n      if (res.ok) {\n        isFriend = true;\n        window.location.reload(true);\n      } else console.log('error adding friend');\n    });\n  }\n  function handleDeleteFriendClick() {\n    fetch('/friendships', {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user_id: parseInt(user.id),\n        friend_id: parseInt(user.id)\n        // friend_id: parseInt(id)\n      })\n    }).catch(err => console.log(err));\n    window.location.reload(true);\n  }\n  const renderUsers = users.map(user => console.log(user));\n  console.log(user);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Friends \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), thisUser || !user ? null : isFriend ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDeleteFriendClick,\n      children: \" Delete Friend \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddFriendClick,\n      children: \" Add Friend \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(Friends, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Friends;\nexport default Friends;\nvar _c;\n$RefreshReg$(_c, \"Friends\");","map":{"version":3,"names":["useEffect","jsxDEV","_jsxDEV","Friends","_ref","_s","user","users","fetchUsers","thisUser","id","parseInt","isFriend","friendIDs","friends","map","friend","includes","handleAddFriendClick","fetch","method","headers","body","JSON","stringify","user_id","friend_id","then","res","ok","window","location","reload","console","log","handleDeleteFriendClick","catch","err","renderUsers","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/Friends.js"],"sourcesContent":["import { useEffect } from 'react'\n\nfunction Friends({user, users, fetchUsers}) {\n    useEffect(() => {fetchUsers()}, [])\n\n    // {id} = useParams()\n\n    const thisUser = user ? user.id === parseInt(user.id) : false\n\n    let isFriend = false\n    if (user) {\n        const friendIDs = user.friends.map(friend => friend.id)\n        isFriend = thisUser ? false : friendIDs.includes(parseInt(user.id))\n        // isFriend = thisUser ? false : friendIDs.includes(parseInt(id))\n    }\n\n    function handleAddFriendClick() {\n        fetch('/friendships', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                // user_id: parseInt(id),\n                user_id: parseInt(user.id),\n                friend_id: parseInt(user.id)\n            })\n        })\n        .then(res => {\n            if(res.ok) {\n                isFriend = true\n                window.location.reload(true)\n            } else console.log('error adding friend')\n        })\n    }\n\n    function handleDeleteFriendClick() {\n        fetch('/friendships', {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                user_id: parseInt(user.id),\n                friend_id: parseInt(user.id)\n                // friend_id: parseInt(id)\n            })\n        })\n        .catch(err => console.log(err))\n        window.location.reload(true)\n    }\n    const renderUsers = users.map(user => console.log(user))\n    console.log(user)\n    return (\n        <div>\n            <h1> Friends </h1>\n            {thisUser||!user ? null :\n            isFriend ?\n                <button onClick={handleDeleteFriendClick}> Delete Friend </button>\n                :\n                <button onClick={handleAddFriendClick}> Add Friend </button>\n            }\n        </div>\n    )\n}\n\nexport default Friends"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}