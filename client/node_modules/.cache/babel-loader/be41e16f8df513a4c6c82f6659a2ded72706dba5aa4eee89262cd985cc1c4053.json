{"ast":null,"code":"var _jsxFileName = \"/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/Groups.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Requests from './Requests';\nimport GroupUsers from './GroupUsers';\nimport { Button, List, Container, Box, Typography, MenuItem, TextField } from '@mui/material';\nimport { styled } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FlexContainer = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between'\n});\n_c = FlexContainer;\nfunction Groups(_ref) {\n  _s();\n  let {\n    groups,\n    fetchGroups,\n    user\n  } = _ref;\n  useEffect(() => {\n    fetchGroups();\n  }, []);\n  const [groupID, setGroupID] = useState(null);\n  const [showUsers, setShowUsers] = useState(null);\n  const [initial, setInitial] = useState(true);\n  const history = useHistory();\n  function handleClick() {\n    fetchGroups();\n    setShowUsers(toggle => !toggle);\n  }\n  const users = groups.map(mappedGroups => mappedGroups.groupuser).flat().filter(filteredGroups => filteredGroups.group_id === groupID).map(group => group.users);\n  const buttonText = showUsers ? /*#__PURE__*/_jsxDEV(Button, {\n    onClick: handleClick,\n    children: \" Show Requests \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 36\n  }, this) : /*#__PURE__*/_jsxDEV(Button, {\n    onClick: handleClick,\n    children: \" Show Users \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 94\n  }, this);\n  const initalButtonText = !initial ? buttonText : null;\n  const renderInfo = showUsers ? /*#__PURE__*/_jsxDEV(GroupUsers, {\n    users: users,\n    user: user\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 36\n  }, this) : /*#__PURE__*/_jsxDEV(Requests, {\n    groupID: groupID\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 79\n  }, this);\n  const initialRenderInfo = !initial ? renderInfo : null;\n\n  // const renderGroups = groups.map(mappedGroups => mappedGroups.groupuser).flat().filter(filteredGroups => filteredGroups.user_id === user.id).map(group => {\n\n  //     return (\n  //         <Container key={group.groups.id} >\n  //         <List className='groupcard' >\n  //             <Button onClick={() => {setGroupID(group.groups.id); setInitial(false)}} > {group.groups.name} </Button>\n  //         </List>\n  //         </Container>\n  //         )\n  // })\n  const renderGroups = groups.map(mappedGroups => mappedGroups.groupuser).flat().filter(filteredGroups => filteredGroups.user_id === user.id).map(group => {\n    return /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: group.groups.name,\n      onClick: () => {\n        setGroupID(group.groups.id);\n        setInitial(false);\n      },\n      children: [\" \", group.groups.name, \"  \"]\n    }, group.groups.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FlexContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        sx: {\n          flexGrow: 1,\n          textAlign: 'center'\n        },\n        children: \"Groups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => history.push('/editgroups'),\n        sx: {\n          marginLeft: 'auto'\n        },\n        children: \" Edit Groups \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"groupscontainer\",\n      children: [\" \", renderGroups, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), renderGroups, initalButtonText, initialRenderInfo]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(Groups, \"GiueiKaI+hhqUTeJ0K4DQZyp2EM=\", false, function () {\n  return [useHistory];\n});\n_c2 = Groups;\nexport default Groups;\nvar _c, _c2;\n$RefreshReg$(_c, \"FlexContainer\");\n$RefreshReg$(_c2, \"Groups\");","map":{"version":3,"names":["useEffect","useState","useHistory","Requests","GroupUsers","Button","List","Container","Box","Typography","MenuItem","TextField","styled","jsxDEV","_jsxDEV","FlexContainer","display","alignItems","justifyContent","_c","Groups","_ref","_s","groups","fetchGroups","user","groupID","setGroupID","showUsers","setShowUsers","initial","setInitial","history","handleClick","toggle","users","map","mappedGroups","groupuser","flat","filter","filteredGroups","group_id","group","buttonText","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","initalButtonText","renderInfo","initialRenderInfo","renderGroups","user_id","id","value","name","variant","sx","flexGrow","textAlign","push","marginLeft","className","_c2","$RefreshReg$"],"sources":["/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/Groups.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport {useHistory } from 'react-router-dom'\nimport Requests from './Requests'\nimport GroupUsers from './GroupUsers'\nimport {Button, List, Container, Box, Typography, MenuItem, TextField} from '@mui/material';\nimport { styled } from '@mui/system';\n\nconst FlexContainer = styled(Box)({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  });\n\nfunction Groups({groups, fetchGroups, user}){\n    useEffect(() => {fetchGroups()}, [])\n    const [groupID, setGroupID] = useState(null)\n    const [showUsers, setShowUsers] = useState(null)\n    const [initial, setInitial] = useState(true)\n    const history = useHistory()\n    function handleClick() {\n        fetchGroups()\n        setShowUsers((toggle) => !toggle)\n    }\n    const users = groups.map(mappedGroups => mappedGroups.groupuser).flat().filter(filteredGroups => filteredGroups.group_id === groupID).map(group => group.users)\n    const buttonText = showUsers ? <Button onClick={handleClick} > Show Requests </Button> : <Button onClick={handleClick} > Show Users </Button>\n    const initalButtonText = !initial ? buttonText : null\n    const renderInfo = showUsers ? <GroupUsers users={users} user={user} /> : <Requests groupID={groupID} /> \n    const initialRenderInfo = !initial ? renderInfo : null\n\n    // const renderGroups = groups.map(mappedGroups => mappedGroups.groupuser).flat().filter(filteredGroups => filteredGroups.user_id === user.id).map(group => {\n\n    //     return (\n    //         <Container key={group.groups.id} >\n    //         <List className='groupcard' >\n    //             <Button onClick={() => {setGroupID(group.groups.id); setInitial(false)}} > {group.groups.name} </Button>\n    //         </List>\n    //         </Container>\n    //         )\n    // })\n    const renderGroups = groups.map(mappedGroups => mappedGroups.groupuser).flat().filter(filteredGroups => filteredGroups.user_id === user.id).map(group => {\n        return (\n            <MenuItem  value={group.groups.name} key={group.groups.id} onClick={() => {setGroupID(group.groups.id); setInitial(false)}} > {group.groups.name}  </MenuItem>\n        )\n    })\n\n    return (\n        <Container >\n        <br></br>\n            <FlexContainer>\n            {/* <Typography sx={{marginTop: 8}}>Groups</Typography> */}\n            <Typography variant=\"h3\" sx={{ flexGrow: 1, textAlign: 'center' }}>Groups</Typography>\n            {/* <Button  onClick={() => history.push('/editgroups')} > Edit Groups </Button> */}\n            <Button onClick={() => history.push('/editgroups')} sx={{ marginLeft: 'auto' }}> Edit Groups </Button>\n            </FlexContainer>\n            <Box  className='groupscontainer'> {renderGroups} </Box>\n            {/* <TextField label='Group' select name='group_id' style={{width: '10%'}} > */}\n              {renderGroups}\n          {/* </TextField> */}\n            {initalButtonText}\n            {initialRenderInfo}\n        </Container>\n    )\n}\n\nexport default Groups"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}