{"ast":null,"code":"var _jsxFileName = \"/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/EditGroups.js\",\n  _s = $RefreshSig$();\nimport { useHistory, Link, Route } from 'react-router-dom';\nimport { useState, useEffect, React } from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditGroups(_ref) {\n  _s();\n  let {\n    groups,\n    fetchGroups,\n    setGroups,\n    setGroup\n  } = _ref;\n  useEffect(() => {\n    fetchGroups();\n  }, []);\n  const history = useHistory();\n  const formSchema = yup.object().shape({\n    name: yup.string().required('Enter group name, dummy!')\n  });\n  function handleDelete(id) {\n    const newGroups = groups.filter(group => {\n      return group.id !== id;\n    });\n    fetch(`/group/${id}`, {\n      method: 'DELETE'\n    }).then(() => setGroups(newGroups));\n  }\n  const formik = useFormik({\n    initialValues: {\n      name: ''\n    },\n    validationSchema: formSchema,\n    validateOnChange: false,\n    onSubmit: (values, _ref2) => {\n      let {\n        resetForm\n      } = _ref2;\n      fetch('/groups', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ...values\n        })\n      }).then(response => {\n        if (response.ok) {\n          response.json().then(data => {\n            history.push('/editgroups');\n            fetchGroups();\n            console.log(values);\n            console.log(data);\n            resetForm({\n              values: ''\n            });\n            // window.location.reload()\n          });\n          // fetch('/groupusers', {\n          //     method: 'POST',\n          //     headers: {\n          //         'Content-Type': 'application/json',\n          //     },\n          //     body: JSON.stringify({})\n          // })\n        }\n      });\n    }\n  });\n\n  console.log(groups);\n  const renderGroups = groups.map(group => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"groupcard\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", group.name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-30\",\n          onClick: () => handleDelete(group.id),\n          children: \" Delete \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/addusers/${group.id}`,\n          children: \" Add Users \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)\n    }, group.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Edit Groups \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: 'red'\n      },\n      children: [\" \", formik.errors.name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"groupform\",\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        name: \"name\",\n        value: formik.values.name,\n        onChange: formik.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"button-30\",\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"groupscontainer\",\n      children: [\" \", renderGroups, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n_s(EditGroups, \"PhbSoD0JALHP7PlB5X41o3iPV54=\", false, function () {\n  return [useHistory, useFormik];\n});\n_c = EditGroups;\nexport default EditGroups;\nvar _c;\n$RefreshReg$(_c, \"EditGroups\");","map":{"version":3,"names":["useHistory","Link","Route","useState","useEffect","React","useFormik","yup","jsxDEV","_jsxDEV","EditGroups","_ref","_s","groups","fetchGroups","setGroups","setGroup","history","formSchema","object","shape","name","string","required","handleDelete","id","newGroups","filter","group","fetch","method","then","formik","initialValues","validationSchema","validateOnChange","onSubmit","values","_ref2","resetForm","headers","body","JSON","stringify","response","ok","json","data","push","console","log","renderGroups","map","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","to","style","color","errors","handleSubmit","type","value","onChange","handleChange","_c","$RefreshReg$"],"sources":["/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/EditGroups.js"],"sourcesContent":["import { useHistory, Link, Route } from 'react-router-dom'\nimport { useState, useEffect, React } from 'react'\nimport { useFormik } from 'formik'\nimport * as yup from 'yup'\n\nfunction EditGroups({groups, fetchGroups, setGroups, setGroup}) {\n    useEffect(() => {fetchGroups()}, [])\n    const history = useHistory()\n    const formSchema = yup.object().shape({\n            name: yup.string().required('Enter group name, dummy!')\n        })\n\n    function handleDelete(id) {\n        const newGroups = groups.filter(group => {\n            return group.id !== id\n        })\n        fetch(`/group/${id}`, {\n            method: 'DELETE'\n        }).then(() => setGroups(newGroups))\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            name: '',\n        },\n        validationSchema: formSchema,\n        validateOnChange: false,\n        onSubmit: (values, {resetForm}) => {\n            fetch('/groups', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({...values}),\n            }).then((response) => {\n                if(response.ok) {\n                    response.json().then((data) => {\n                        history.push('/editgroups')\n                        fetchGroups()\n                        console.log(values)\n                        console.log(data)\n                        resetForm({ values: ''})\n                        // window.location.reload()\n                    })\n            // fetch('/groupusers', {\n            //     method: 'POST',\n            //     headers: {\n            //         'Content-Type': 'application/json',\n            //     },\n            //     body: JSON.stringify({})\n            // })\n                }\n            })\n        }\n    })\n\n    console.log(groups)\n    const renderGroups = groups.map((group) => {\n        return (\n            <div key={group.id} >\n            <ul className='groupcard' >\n                <li > {group.name} </li>\n                <button className='button-30' onClick={() => handleDelete(group.id)} > Delete </button>\n                {/* <Link to={`/addusers`} onClick={() => setGroup(group)}> Add Users </Link> */}\n                <Link to={`/addusers/${group.id}`} > Add Users </Link>\n            </ul>\n            </div>\n            )\n    })\n    return (\n        <div>\n            <h1> Edit Groups </h1>\n            <h2 style={{color:'red'}} > {formik.errors.name} </h2>\n            <form className='groupform' onSubmit={formik.handleSubmit}>\n                <label> Name: </label>\n                <textarea\n                type='text'\n                name='name'\n                value={formik.values.name}\n                onChange={formik.handleChange}\n                />\n                <input className='button-30' type='submit' />\n            </form>\n            <div className='groupscontainer' > {renderGroups} </div>\n        </div>\n    )\n}\n\nexport default EditGroups"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}