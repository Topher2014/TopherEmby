[{"/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/index.js":"1","/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/App.js":"2","/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/Home.js":"3","/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/Authentication.js":"4","/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/Nav.js":"5","/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/Groups.js":"6","/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/Requests.js":"7","/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/EditGroups.js":"8","/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/AddRequest.js":"9","/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/GroupUsers.js":"10","/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/Search.js":"11","/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/EnterManually.js":"12","/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/FriendsUsers.js":"13","/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/AddDelUsers.js":"14","/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/Header.js":"15"},{"size":2278,"mtime":1682029850050,"results":"16","hashOfConfig":"17"},{"size":2535,"mtime":1682050219840,"results":"18","hashOfConfig":"17"},{"size":584,"mtime":1682049851774,"results":"19","hashOfConfig":"17"},{"size":4129,"mtime":1682052581946,"results":"20","hashOfConfig":"17"},{"size":1737,"mtime":1682033229511,"results":"21","hashOfConfig":"17"},{"size":2437,"mtime":1682031345042,"results":"22","hashOfConfig":"17"},{"size":1930,"mtime":1682044710125,"results":"23","hashOfConfig":"17"},{"size":4625,"mtime":1682044830604,"results":"24","hashOfConfig":"17"},{"size":1585,"mtime":1682033849771,"results":"25","hashOfConfig":"17"},{"size":586,"mtime":1682031345042,"results":"26","hashOfConfig":"17"},{"size":6034,"mtime":1682051275622,"results":"27","hashOfConfig":"17"},{"size":3489,"mtime":1682045429080,"results":"28","hashOfConfig":"17"},{"size":3891,"mtime":1682031345042,"results":"29","hashOfConfig":"17"},{"size":3432,"mtime":1682031442454,"results":"30","hashOfConfig":"17"},{"size":1288,"mtime":1682050621170,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"q1icht",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"35"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"35"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"35"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"35"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"35"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"35"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/index.js",[],[],[],"/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/App.js",[],[],"/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/Home.js",["87","88"],[],"import Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nfunction Home(){\n    return (\n    //    <Container sx={{alignItems: 'center'}}>\n        // <img style={{alignSelf: 'center', marginTop: 200, marginLeft: 45}} src='https://github.com/Topher2014/TopherEmby/blob/main/TopherEmby.png?raw=true' alt='TopherEmby'></img>\n    //    </Container> \n    null\n    )\n    // client/public/TopherEmby.png\n        //  marginTop: 8,\n        // display: 'flex',\n        // flexDirection: 'column',\n        // alignItems: 'center', \n}\n\nexport default Home","/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/Authentication.js",[],[],"/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/Nav.js",["89","90","91","92","93","94"],[],"import {useHistory} from 'react-router-dom'\n// import Button from '@mui/material/Button';\n// import Container from '@mui/material/Container';\nimport {List, AppBar, Toolbar, Button, Box, Container} from '@mui/material'\nimport index from '../index.js'\nimport {palette, theme} from '@mui/system'\nimport TopherEmby from '../Images/TopherEmby.png'\n\nfunction Nav({updateUser}) {\n    const history = useHistory()\n    const handleLogout = () => {\n        fetch('/logout', {\n            method: 'DELETE',\n        }).then(res => {\n            if(res.ok) {\n                updateUser(null)\n                history.push('/authentication')\n            }\n        })\n    }\n\n    return (\n        <Box sx={{bgcolor: 'primary.secondary'}}>\n        {/* // <Container > */}\n         {/* <Container sx={{color:'#282828'}}> */}\n            <AppBar position='sticky' sx={{marginTop: 2}}>\n            <Toolbar sx={{justifyContent: 'flex-end'}} >\n            <Button sx={{color: 'primary.contrastText', marginRight: '40%'}} startIcon={<img src={TopherEmby}/>} onClick={() => history.push('/')} > </Button>\n                <Button sx={{color: 'primary.contrastText', marginRight: '0px'}} onClick={() => history.push('/groups')} >  Groups </Button>\n                <Button sx={{color: 'primary.contrastText', marginRight: '0px'}} onClick={() => history.push('/addrequest')} >  Add Request </Button>\n                <Button sx={{color: 'primary.contrastText', marginLeft: '0px'}} onClick={() => history.push('/friendsusers')} >  Friends/Users </Button>\n                <Button sx={{color: 'primary.contrastText', marginLeft: '0px'}} onClick={handleLogout} >  Logout  </Button>\n            </Toolbar> \n            </AppBar>\n        </Box>\n    )\n}\n\nexport default Nav","/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/Groups.js",["95","96","97"],[],"import { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Requests from './Requests'\nimport GroupUsers from './GroupUsers'\nimport { Button, List, Container, Box, Typography, MenuItem, TextField } from '@mui/material';\nimport { styled } from '@mui/system';\n\n  const EditButton = styled(Button)({\n    margin: '16px 0',\n    fontWeight: 'bold',\n    color: 'white',\n    background: '#2e7d32',\n    '&:hover': {\n      background: '#1b5e20',\n    },\n  });\n  \n  const SelectBox = styled(TextField)({\n    margin: '16px 0',\n  });\n\nfunction Groups({ groups, fetchGroups, user }) {\n  useEffect(() => {\n    fetchGroups()\n  }, [])\n\n  const [groupID, setGroupID] = useState(null)\n  const [showUsers, setShowUsers] = useState(null)\n  const [initial, setInitial] = useState(true)\n  const [label, setLabel] = useState('Select a group...')\n  const history = useHistory()\n\n  function handleClick() {\n    fetchGroups()\n    setShowUsers((toggle) => !toggle)\n  }\n\n  const users = groups\n    .map((mappedGroups) => mappedGroups.groupuser)\n    .flat()\n    .filter((filteredGroups) => filteredGroups.group_id === groupID)\n    .map((group) => group.users)\n\n  const buttonText = showUsers ? (\n    <Button onClick={handleClick}>Show Requests</Button>\n  ) : (\n    <Button onClick={handleClick}>Show Users</Button>\n  )\n\n  const initalButtonText = !initial ? buttonText : null\n\n  const renderInfo = showUsers ? (\n    <GroupUsers users={users} user={user} />\n  ) : (\n    <Requests groupID={groupID} />\n  )\n\n  const initialRenderInfo = !initial ? renderInfo : null\n\n  const renderGroups = groups\n    .map((mappedGroups) => mappedGroups.groupuser)\n    .flat()\n    .filter((filteredGroups) => filteredGroups.user_id === user.id)\n    .map((group) => {\n      return (\n        <MenuItem\n          key={group.groups.id}\n          onClick={() => {\n            setGroupID(group.groups.id)\n            setInitial(false)\n            setLabel(group.groups.name)\n          }}\n        >\n          {group.groups.name}\n        </MenuItem>\n      )\n    })\n\n  return (\n    <Container sx={{marginTop: 10}} >\n      <Typography >Groups</Typography>\n      <EditButton onClick={() => history.push('/editgroups')}>\n        Edit Groups\n      </EditButton>\n      <SelectBox label={label} select name=\"group_id\" fullWidth>\n        {renderGroups}\n      </SelectBox>\n      {initalButtonText}\n      {initialRenderInfo}\n    </Container>\n  )\n}\n\nexport default Groups","/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/Requests.js",[],[],"/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/EditGroups.js",["98","99","100","101","102","103"],[],"import { useState, useEffect } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport {\n  Button,\n  ListItem,\n  List,\n  Container,\n  Box,\n  TextField,\n  Typography,\n  Chip, Divider, CircularProgress\n} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\nimport { styled } from '@mui/system';\n\nconst GroupTitle = styled(Typography)({\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 16,\n  });\n  \n  const EditButton = styled(Button)({\n    margin: '16px 0',\n    fontWeight: 'bold',\n    color: 'white',\n    background: '#2e7d32',\n    '&:hover': {\n      background: '#1b5e20',\n    },\n  });\n  \n  const SelectBox = styled(TextField)({\n    margin: '16px 0',\n  });\n  \n  const GroupButton = styled(Button)({\n    margin: '0 16px',\n    fontWeight: 'bold',\n  });\n\nconst EditGroups = ({ groups, fetchGroups, setGroups, user }) => {\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const formSchema = yup.object().shape({\n    name: yup.string().required('Enter group name'),\n  });\n\n  useEffect(() => {\n    fetchGroups();\n  }, []);\n\n  const handleDelete = (id) => {\n    setLoading(true);\n    const newGroups = groups.filter((group) => group.id !== id);\n    fetch(`/group/${id}`, {\n      method: 'DELETE',\n    }).then(() => {\n      setLoading(false);\n      setGroups(newGroups);\n    });\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n    },\n    validationSchema: formSchema,\n    validateOnChange: false,\n    onSubmit: (values, { resetForm }) => {\n      setLoading(true);\n      fetch('/groups', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ ...values }),\n      }).then((response) => {\n        setLoading(false);\n        if (response.ok) {\n          response.json().then((data) => {\n            history.push('/editgroups');\n            fetchGroups();\n            resetForm({ values: '' });\n            fetch('/groupusers', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify({ user_id: data.user_id, group_id: data.id }),\n            });\n          });\n        }\n      });\n    },\n  });\n\n  const renderGroups = groups\n    .map((mappedGroups) => mappedGroups.groupuser)\n    .flat()\n    .filter((filteredGroups) => filteredGroups.user_id === user.id)\n    .map((group) => (\n      <Container key={group.groups.id}>\n        <List className='groupcard'>\n          <Chip\n            label={group.groups.name}\n            color='primary'\n            onDelete={() => handleDelete(group.groups.id)}\n            deleteIcon={<DeleteIcon />}\n          />\n          <Button\n            variant='outlined'\n            size='small'\n            startIcon={<PersonAddIcon />}\n            onClick={() => history.push(`/addremoveusers/${group.groups.id}`)}\n          >\n            Add/Remove Users\n          </Button>\n        </List>\n      </Container>\n    ));\n\n  return (\n    <Container sx={{ marginTop: 10 }}>\n      <Typography> Edit Groups </Typography>\n      <Box sx={{ my: 2 }}>\n        <Typography color='error' gutterBottom>\n          {formik.errors.name}\n        </Typography>\n        <form onSubmit={formik.handleSubmit}>\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            <TextField\n              label='Name'\n              name='name'\n              size='small'\n              variant='outlined'\n              value={formik.values.name}\n              onChange={formik.handleChange}\n            />\n            <Box sx={{ ml: 1 }}>\n              <EditButton\n                type='submit'\n                variant='contained'\n                disabled={loading}\n                size='large'\n              >\n                Add Group\n              </EditButton>\n            </Box>\n          </Box>\n       \n          {loading && (\n        <Box sx={{ display: 'flex', alignItems: 'center', mt: 2 }}>\n          <CircularProgress size={20} />\n          <Box sx={{ ml: 1 }}>Adding Group...</Box>\n        </Box>\n      )}\n    </form>\n  </Box>\n  <Divider sx={{ mb: 2 }} />\n  <Typography>Your Groups:</Typography>\n  <Box sx={{ mt: 2 }}>\n    {renderGroups.length > 0 ? (\n      <List sx={{ display: 'flex', flexDirection: 'column' }}>\n        {renderGroups}\n      </List>\n    ) : (\n      <Typography>You are not a member of any groups yet.</Typography>\n    )}\n  </Box>\n</Container>\n  )\n    }\n\n\nexport default EditGroups","/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/AddRequest.js",["104","105","106"],[],"import { useState, useEffect } from 'react'\nimport EnterManually from \"./EnterManually\"\nimport Search from \"./Search\"\nimport {Button, Container, Typography, MenuItem, TextField} from '@mui/material';\nimport { styled } from '@mui/system';\n\n  const GroupButton = styled(Button)({\n    margin: '0 16px',\n    fontWeight: 'bold',\n  });\n\nfunction AddRequest({groups, fetchGroups, user}) {\n    const [showManual, setShowManual] = useState(false)\n    useEffect(() => {fetchGroups()}, [])\n    const groupOptions = groups.map(mappedGroups => mappedGroups.groupuser).flat().filter(filteredGroups => filteredGroups.user_id === user.id).map(group => {\n        return (\n            // <option value={group.groups.id} key={group.groups.id} > {group.groups.name} </option>\n            <MenuItem value={group.groups.id} key={group.groups.id} > {group.groups.name} </MenuItem>\n        )\n    })\n    function handleClick() {\n        setShowManual(toggle => !toggle)\n    }\n    const buttonText = showManual ? <Button sx={{marginTop: '-110px'}} onClick={handleClick} > Click here to search instead </Button> : <Button onClick={handleClick} > Don't see what you're looking for? Click here to enter it manually! </Button> \n    const requestMethod = showManual ? <EnterManually buttonText={buttonText} groupOptions={groupOptions} /> : <Search buttonText={buttonText} groupOptions={groupOptions} /> \n    return (\n        <Container sx={{marginTop: 10}} >\n            <Typography > Add Request </Typography>\n            {requestMethod}\n            <br></br>\n        </Container>\n    )\n}\n\nexport default AddRequest","/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/GroupUsers.js",["107","108","109"],[],"import { ListItem, List, Container, Typography, Button } from '@mui/material';\nimport { styled } from '@mui/system';\n\nfunction GroupUsers({ users, user }) {\n  console.log(users);\n\n  const renderUsers = users.map((thisUser) => {\n    if (user.id === thisUser.id) {\n      return null;\n    }\n\n    return (\n      <Container key={thisUser.id}>\n            <ListItem>{thisUser.name}</ListItem>\n      </Container>\n    );\n  });\n\n  return (\n    <Container>\n      <Typography fontSize={24}>\n        Users\n      </Typography>\n      {renderUsers}\n    </Container>\n  );\n}\n\nexport default GroupUsers;\n","/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/Search.js",[],[],"/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/EnterManually.js",["110"],[],"import { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { Container, Box, TextField, Button, Typography, MenuItem,} from '@mui/material';\nimport { styled } from '@mui/system';\n\nconst EditButton = styled(Button)({\n  margin: '16px 0',\n  fontWeight: 'bold',\n  color: 'white',\n  background: '#2e7d32',\n  '&:hover': {\n    background: '#1b5e20',\n  },\n});\n\nfunction EnterManually({ buttonText, groupOptions }) {\n  const formSchema = yup.object().shape({\n    name: yup.string().required('Enter a name, dummy!'),\n    type: yup.string().required('You really should add a type, dummy!'),\n    quality: yup.string().required('You really should add a quality, dummy!'),\n    group_id: yup.number().required('Choose a group, dummy!'),\n  });\n  const form = useFormik({\n    initialValues: {\n      name: '',\n      type: '',\n      quality: '',\n      group_id: '',\n    },\n    validationSchema: formSchema,\n    validateOnChange: false,\n    onSubmit: (values, { resetForm }) => {\n      fetch('/addrequest', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ ...values }),\n      }).then((response) => {\n        if (response.ok) {\n          resetForm({ values: '' });\n        }\n      });\n    },\n  });\n\n  return (\n    <Container>\n      <Box\n        component=\"form\"\n        className=\"requestform\"\n        onSubmit={form.handleSubmit}\n        sx={{ display: 'flex', flexWrap: 'wrap', gap: '10px' }}\n      >\n        <TextField\n          label=\"Name\"\n          type=\"text\"\n          sx={{ width: 'calc(50% - 10px)' }}\n          name=\"name\"\n          value={form.values.name}\n          onChange={form.handleChange}\n          error={form.touched.name && Boolean(form.errors.name)}\n          helperText={form.touched.name && form.errors.name}\n        />\n        <TextField\n          select\n          label=\"Type\"\n          name=\"type\"\n          value={form.values.type}\n          onChange={form.handleChange}\n          sx={{ width: 'calc(50% - 10px)' }}\n          error={form.touched.type && Boolean(form.errors.type)}\n          helperText={form.touched.type && form.errors.type}\n        >\n          <MenuItem value=\"movie\">Movie</MenuItem>\n          <MenuItem value=\"tv\">Show</MenuItem>\n        </TextField>\n        <TextField\n          select\n          label=\"Quality\"\n          name=\"quality\"\n          value={form.values.quality}\n          onChange={form.handleChange}\n          sx={{ width: 'calc(50% - 10px)' }}\n          error={form.touched.quality && Boolean(form.errors.quality)}\n          helperText={form.touched.quality && form.errors.quality}\n        >\n          <MenuItem value=\"720p\">720p</MenuItem>\n          <MenuItem value=\"1080p\">1080p</MenuItem>\n          <MenuItem value=\"4k\">4k</MenuItem>\n        </TextField>\n        <TextField\n          select\n          name=\"group_id\"\n          label=\"Group\"\n          value={form.values.group_id}\n          onChange={form.handleChange}\n          sx={{ width: 'calc(50% - 10px)' }}\n          error={form.touched.group_id && Boolean(form.errors.group_id)}\n          helperText={form.touched.group_id && form.errors.group_id}\n        >\n          {groupOptions}\n        </TextField>\n        <EditButton\n          className=\"button-30\"\n          type=\"submit\"\n          sx={{ mt: '16px', ml: 'auto' }}\n        >\n          Submit\n        </EditButton>\n      </Box>\n      <Box sx={{ mt: '16px' }}>{buttonText}</Box>\n      </Container>\n  )\n}\n\nexport default EnterManually","/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/FriendsUsers.js",["111"],[],"import { useEffect, useState } from 'react'\nimport {Button, Container, TextField, Typography, Chip} from '@mui/material';\nimport { styled } from '@mui/system';\n\nconst EditButton = styled(Button)({\n  margin: '16px 0',\n  fontWeight: 'bold',\n  color: 'white',\n  background: '#2e7d32',\n  '&:hover': {\n    background: '#1b5e20',\n  },\n});\n\nfunction FriendsUsers({user, users, fetchUsers}) {\n    useEffect(() => {fetchUsers()}, [])\n    const [filteredUsers, setFilteredUsers] = useState([])\n    useEffect(() => {setFilteredUsers(users)}, [users])\n\n    function handleAddFriendClick(friend_id) {\n        fetch('/friendships', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                user_id: parseInt(user.id),\n                friend_id: parseInt(friend_id)\n            })\n        })\n        .then(res => {\n            if(res.ok) {\n                window.location.reload(true)\n            } else console.log('error adding friend')\n        })\n    }\n\n    function handleDeleteFriendClick(friend_id) {\n        fetch('/friendships', {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                user_id: parseInt(user.id),\n                friend_id: parseInt(friend_id)\n            })\n        })\n        .catch(err => console.log(err))\n        window.location.reload(true)\n    }\n    const [showFriends, setShowFriends] = useState(false)\n    function handleClick() {\n        setShowFriends((toggle) => !toggle)\n    }\n    const buttonText = showFriends ? <EditButton onClick={handleClick} > Show Friends </EditButton> : <EditButton onClick={handleClick} > Show All Users </EditButton>\n    const searchText = showFriends ? 'Search All Users' : 'Search Friends' \n    \n    const friendIDs = user.friends.map(friend => friend.id)\n    const handleChange = (event) => {\n        const search = event.target.value.toLowerCase()\n        setFilteredUsers(users.filter(user => {\n            const usernameBool = user.name.toLowerCase().includes(search)\n            const emailBool = user.email.toLowerCase().includes(search)\n            return usernameBool || emailBool\n        }))\n    }\n    const renderUsers = filteredUsers.map(filteredUser => {\n        const isFriend = friendIDs.includes(filteredUser.id)\n        if (filteredUser.id === user.id){\n            return ''\n        }\n        if (!showFriends){\n            if (friendIDs.includes(filteredUser.id)){\n            return (\n            <Container key={filteredUser.id}>\n                <br></br>\n                {isFriend ? <Chip color='primary' label={filteredUser.name} onDelete={() => handleDeleteFriendClick(filteredUser.id)} />  : <Chip color='primary' label={filteredUser.name} onClick={() => handleAddFriendClick(filteredUser.id)} /> }\n                <br></br>\n            </Container>\n            )\n            }\n            else return null\n            }\n        else if (showFriends){\n            return (\n            <Container key={filteredUser.id}>\n                <br></br>\n                {isFriend ? <Chip color='primary' label={filteredUser.name} onDelete={() => handleDeleteFriendClick(filteredUser.id)} /> : <Chip color='primary' label={filteredUser.name} onClick={() => handleAddFriendClick(filteredUser.id)} />}\n                <br></br>\n            </Container>\n            )\n            }\n    return null\n    })\n\n    return (\n        <Container sx={{marginTop: 10}}>\n            <Typography> Users and Friends </Typography>\n            {buttonText}\n            <br></br>\n            <br></br>\n            <TextField label={searchText} onChange={(event) => handleChange(event)}/>  \n            <br></br>\n            <br></br>\n            {renderUsers}\n        </Container>\n    )\n}\n\nexport default FriendsUsers","/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/AddDelUsers.js",["112","113"],[],"import { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport {Button, ListItem, List, Container, Typography, Chip, TextField} from '@mui/material';\nimport { styled } from '@mui/system';\n\n  const EditButton = styled(Button)({\n    margin: '16px 0',\n    fontWeight: 'bold',\n    color: 'white',\n    background: '#2e7d32',\n    '&:hover': {\n      background: '#1b5e20',\n    },\n  });\n\nfunction AddDelUsers({users, fetchUsers, user, groups, fetchGroups}) {\n    const {groupId} = useParams()\n    useEffect(() => {fetchUsers(); fetchGroups()}, [])\n\n    function handleAddClick(user_id, group_id){\n        fetch(`/groupusers`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({user_id: user_id, group_id: group_id}),\n        })\n            window.location.reload(true)\n    }\n\n    function handleDeleteClick(user_id, group_id){\n        fetch(`/groupusers`, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({user_id: user_id, group_id: group_id}),\n        })\n            window.location.reload(true)\n    }\n\n    const groupIDs = groups.map(mappedGroups => mappedGroups.groupuser).flat().filter(filteredGroup => filteredGroup.group_id === parseInt(groupId)).map(group => group.user_id)\n    const addUsers = user.friends.map((user) => {\n        if (groupIDs.includes(user.id)){\n            return null\n            }\n        return (\n            <Container key={user.id} >\n            <List className='usercard' >\n                <Chip color='primary' label={user.name} onClick={() => handleAddClick(user.id, groupId)} />\n            </List>\n            </Container>\n        )\n    })\n    const removeUsers = users.map((thisUser) => {\n        if(user.id === thisUser.id){\n            return null\n        }\n        if (!groupIDs.includes(thisUser.id)){\n            return null\n            }\n        return (\n            <Container key={thisUser.id} >\n                <List className='usercard' >\n                    <ListItem>\n                        <Chip color='primary' label={thisUser.name} onDelete={() => handleDeleteClick(thisUser.id, groupId)} />\n                    </ListItem>\n                </List>\n            </Container>\n        )\n    })\n    const [showFriends, setShowFriends] = useState(false)\n    function handleClick() {\n        setShowFriends((toggle) => !toggle)\n    }\n    const buttonText = showFriends ? <EditButton onClick={handleClick} > Add Friends to Group </EditButton> : <EditButton onClick={handleClick} > Remove Friends from Group </EditButton>\n    const renderUsers = showFriends ? removeUsers : addUsers\n    let friendInfo\n    const group = groups.filter(group => group.id === parseInt(groupId))\n    if(groups.length === 0){\n        return null\n    }\n    else{\n     friendInfo = showFriends ? <Typography fontSize={24}> These are your friends currently in {group[0].name}. Click to remove. </Typography> : <Typography fontSize={24}> These are friends who can be added to {group[0].name}. Click to add.  </Typography>\n    }\n    return (\n        <Container sx={{marginTop: 10}}>\n            <Typography> Add/Remove Users to Group</Typography>\n            {buttonText}\n            {friendInfo}\n            {renderUsers}\n        </Container>\n    )\n}\n\nexport default AddDelUsers","/home/topher/Desktop/Flatiron/Phase5/Project/TopherEmby/client/src/Components/Header.js",[],[],{"ruleId":"114","severity":1,"message":"115","line":1,"column":8,"nodeType":"116","messageId":"117","endLine":1,"endColumn":18},{"ruleId":"114","severity":1,"message":"118","line":2,"column":8,"nodeType":"116","messageId":"117","endLine":2,"endColumn":17},{"ruleId":"114","severity":1,"message":"119","line":4,"column":9,"nodeType":"116","messageId":"117","endLine":4,"endColumn":13},{"ruleId":"114","severity":1,"message":"118","line":4,"column":45,"nodeType":"116","messageId":"117","endLine":4,"endColumn":54},{"ruleId":"114","severity":1,"message":"120","line":5,"column":8,"nodeType":"116","messageId":"117","endLine":5,"endColumn":13},{"ruleId":"114","severity":1,"message":"121","line":6,"column":9,"nodeType":"116","messageId":"117","endLine":6,"endColumn":16},{"ruleId":"114","severity":1,"message":"122","line":6,"column":18,"nodeType":"116","messageId":"117","endLine":6,"endColumn":23},{"ruleId":"123","severity":1,"message":"124","line":28,"column":89,"nodeType":"125","endLine":28,"endColumn":112},{"ruleId":"114","severity":1,"message":"119","line":5,"column":18,"nodeType":"116","messageId":"117","endLine":5,"endColumn":22},{"ruleId":"114","severity":1,"message":"126","line":5,"column":35,"nodeType":"116","messageId":"117","endLine":5,"endColumn":38},{"ruleId":"127","severity":1,"message":"128","line":25,"column":6,"nodeType":"129","endLine":25,"endColumn":8,"suggestions":"130"},{"ruleId":"114","severity":1,"message":"131","line":2,"column":22,"nodeType":"116","messageId":"117","endLine":2,"endColumn":26},{"ruleId":"114","severity":1,"message":"132","line":7,"column":3,"nodeType":"116","messageId":"117","endLine":7,"endColumn":11},{"ruleId":"114","severity":1,"message":"133","line":19,"column":7,"nodeType":"116","messageId":"117","endLine":19,"endColumn":17},{"ruleId":"114","severity":1,"message":"134","line":35,"column":9,"nodeType":"116","messageId":"117","endLine":35,"endColumn":18},{"ruleId":"114","severity":1,"message":"135","line":39,"column":9,"nodeType":"116","messageId":"117","endLine":39,"endColumn":20},{"ruleId":"127","severity":1,"message":"128","line":53,"column":6,"nodeType":"129","endLine":53,"endColumn":8,"suggestions":"136"},{"ruleId":"114","severity":1,"message":"137","line":4,"column":50,"nodeType":"116","messageId":"117","endLine":4,"endColumn":59},{"ruleId":"114","severity":1,"message":"135","line":7,"column":9,"nodeType":"116","messageId":"117","endLine":7,"endColumn":20},{"ruleId":"127","severity":1,"message":"128","line":14,"column":38,"nodeType":"129","endLine":14,"endColumn":40,"suggestions":"138"},{"ruleId":"114","severity":1,"message":"119","line":1,"column":20,"nodeType":"116","messageId":"117","endLine":1,"endColumn":24},{"ruleId":"114","severity":1,"message":"139","line":1,"column":49,"nodeType":"116","messageId":"117","endLine":1,"endColumn":55},{"ruleId":"114","severity":1,"message":"140","line":2,"column":10,"nodeType":"116","messageId":"117","endLine":2,"endColumn":16},{"ruleId":"114","severity":1,"message":"115","line":3,"column":45,"nodeType":"116","messageId":"117","endLine":3,"endColumn":55},{"ruleId":"127","severity":1,"message":"141","line":16,"column":37,"nodeType":"129","endLine":16,"endColumn":39,"suggestions":"142"},{"ruleId":"114","severity":1,"message":"137","line":3,"column":62,"nodeType":"116","messageId":"117","endLine":3,"endColumn":71},{"ruleId":"127","severity":1,"message":"143","line":18,"column":52,"nodeType":"129","endLine":18,"endColumn":54,"suggestions":"144"},"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'List' is defined but never used.","'index' is defined but never used.","'palette' is defined but never used.","'theme' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Box' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchGroups'. Either include it or remove the dependency array. If 'fetchGroups' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["145"],"'Link' is defined but never used.","'ListItem' is defined but never used.","'GroupTitle' is assigned a value but never used.","'SelectBox' is assigned a value but never used.","'GroupButton' is assigned a value but never used.",["146"],"'TextField' is defined but never used.",["147"],"'Button' is defined but never used.","'styled' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array. If 'fetchUsers' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["148"],"React Hook useEffect has missing dependencies: 'fetchGroups' and 'fetchUsers'. Either include them or remove the dependency array. If 'fetchUsers' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["149"],{"desc":"150","fix":"151"},{"desc":"150","fix":"152"},{"desc":"150","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},"Update the dependencies array to be: [fetchGroups]",{"range":"158","text":"159"},{"range":"160","text":"159"},{"range":"161","text":"159"},"Update the dependencies array to be: [fetchUsers]",{"range":"162","text":"163"},"Update the dependencies array to be: [fetchGroups, fetchUsers]",{"range":"164","text":"165"},[650,652],"[fetchGroups]",[1220,1222],[475,477],[421,423],"[fetchUsers]",[569,571],"[fetchGroups, fetchUsers]"]